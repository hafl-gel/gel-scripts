// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// find_window
Rcpp::List find_window(NumericVector x, NumericVector y1, NumericVector y2);
RcppExport SEXP _gel_find_window(SEXP xSEXP, SEXP y1SEXP, SEXP y2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    rcpp_result_gen = Rcpp::wrap(find_window(x, y1, y2));
    return rcpp_result_gen;
END_RCPP
}
// fit_ogive
double fit_ogive(const NumericVector paras, const NumericVector ogive, const NumericVector f, const int ilo, const int ihi);
RcppExport SEXP _gel_fit_ogive(SEXP parasSEXP, SEXP ogiveSEXP, SEXP fSEXP, SEXP iloSEXP, SEXP ihiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector >::type paras(parasSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type ogive(ogiveSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type f(fSEXP);
    Rcpp::traits::input_parameter< const int >::type ilo(iloSEXP);
    Rcpp::traits::input_parameter< const int >::type ihi(ihiSEXP);
    rcpp_result_gen = Rcpp::wrap(fit_ogive(paras, ogive, f, ilo, ihi));
    return rcpp_result_gen;
END_RCPP
}
// ht8700_read_cpp
Rcpp::List ht8700_read_cpp(String filename);
RcppExport SEXP _gel_ht8700_read_cpp(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type filename(filenameSEXP);
    rcpp_result_gen = Rcpp::wrap(ht8700_read_cpp(filename));
    return rcpp_result_gen;
END_RCPP
}
// ht8700_read_cpp_gzip
Rcpp::List ht8700_read_cpp_gzip(Rcpp::String filename);
RcppExport SEXP _gel_ht8700_read_cpp_gzip(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::String >::type filename(filenameSEXP);
    rcpp_result_gen = Rcpp::wrap(ht8700_read_cpp_gzip(filename));
    return rcpp_result_gen;
END_RCPP
}
// match_times
List match_times(NumericVector time1, NumericVector time2, double deltat);
RcppExport SEXP _gel_match_times(SEXP time1SEXP, SEXP time2SEXP, SEXP deltatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type time1(time1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type time2(time2SEXP);
    Rcpp::traits::input_parameter< double >::type deltat(deltatSEXP);
    rcpp_result_gen = Rcpp::wrap(match_times(time1, time2, deltat));
    return rcpp_result_gen;
END_RCPP
}
// decal
List decal(IntegerVector x, IntegerVector y);
RcppExport SEXP _gel_decal(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(decal(x, y));
    return rcpp_result_gen;
END_RCPP
}
// licor_read_cpp
Rcpp::List licor_read_cpp(String filename);
RcppExport SEXP _gel_licor_read_cpp(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type filename(filenameSEXP);
    rcpp_result_gen = Rcpp::wrap(licor_read_cpp(filename));
    return rcpp_result_gen;
END_RCPP
}
// licor_read_cpp_gzip
Rcpp::List licor_read_cpp_gzip(Rcpp::String filename);
RcppExport SEXP _gel_licor_read_cpp_gzip(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::String >::type filename(filenameSEXP);
    rcpp_result_gen = Rcpp::wrap(licor_read_cpp_gzip(filename));
    return rcpp_result_gen;
END_RCPP
}
// nakai_correction_2012
Rcpp::List nakai_correction_2012(std::vector<double>& uIn, std::vector<double>& vIn, std::vector<double>& wIn);
RcppExport SEXP _gel_nakai_correction_2012(SEXP uInSEXP, SEXP vInSEXP, SEXP wInSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double>& >::type uIn(uInSEXP);
    Rcpp::traits::input_parameter< std::vector<double>& >::type vIn(vInSEXP);
    Rcpp::traits::input_parameter< std::vector<double>& >::type wIn(wInSEXP);
    rcpp_result_gen = Rcpp::wrap(nakai_correction_2012(uIn, vIn, wIn));
    return rcpp_result_gen;
END_RCPP
}
// hs_read_cpp
Rcpp::List hs_read_cpp(String filename);
RcppExport SEXP _gel_hs_read_cpp(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type filename(filenameSEXP);
    rcpp_result_gen = Rcpp::wrap(hs_read_cpp(filename));
    return rcpp_result_gen;
END_RCPP
}
// hs_read_cpp_gzip
Rcpp::List hs_read_cpp_gzip(Rcpp::String filename);
RcppExport SEXP _gel_hs_read_cpp_gzip(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::String >::type filename(filenameSEXP);
    rcpp_result_gen = Rcpp::wrap(hs_read_cpp_gzip(filename));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gel_find_window", (DL_FUNC) &_gel_find_window, 3},
    {"_gel_fit_ogive", (DL_FUNC) &_gel_fit_ogive, 5},
    {"_gel_ht8700_read_cpp", (DL_FUNC) &_gel_ht8700_read_cpp, 1},
    {"_gel_ht8700_read_cpp_gzip", (DL_FUNC) &_gel_ht8700_read_cpp_gzip, 1},
    {"_gel_match_times", (DL_FUNC) &_gel_match_times, 3},
    {"_gel_decal", (DL_FUNC) &_gel_decal, 2},
    {"_gel_licor_read_cpp", (DL_FUNC) &_gel_licor_read_cpp, 1},
    {"_gel_licor_read_cpp_gzip", (DL_FUNC) &_gel_licor_read_cpp_gzip, 1},
    {"_gel_nakai_correction_2012", (DL_FUNC) &_gel_nakai_correction_2012, 3},
    {"_gel_hs_read_cpp", (DL_FUNC) &_gel_hs_read_cpp, 1},
    {"_gel_hs_read_cpp_gzip", (DL_FUNC) &_gel_hs_read_cpp_gzip, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_gel(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
